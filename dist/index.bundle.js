"use strict";(self.webpackChunktodo_list=self.webpackChunktodo_list||[]).push([[826],{852:(e,t,r)=>{function n(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}var o=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:0,o=!(arguments.length>4&&void 0!==arguments[4])||arguments[4],i=!1,a="",s=(e=e.trim()).length;if(t&&e.length<=0)return{isError:i=!0,msg:a="This field is Required!"};if(r>0&&s<r)return{isError:i=!0,msg:a="The min character length of this field is ".concat(r)};if(n>0&&s>n)return{isError:i=!0,msg:a="The max character length of this field is ".concat(n)};if(!o){var c=e.replace(/\s/g,""),l=/^[A-Za-z][A-Za-z0-9-_.]*$/;if(!l.test(c))return{isError:i=!0,msg:a="This field is only allow A-z0-9_.- characters and also first character should be A-z"}}return{isError:i,msg:a}},i=document.getElementById("description"),a=document.querySelector(".show-msg"),s=document.querySelector(".btn-submit"),c=document.querySelector(".todo-items-gropu"),l=(document.querySelectorAll(".todo-des"),document.querySelector(".btn-clear-all"));const d=r.p+"images/three-dot-24.png",u=r.p+"images/trash-24.png";function m(e){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},m(e)}function f(e){return function(e){if(Array.isArray(e))return p(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return p(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?p(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function v(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,h(n.key),n)}}function g(e,t,r){return t&&v(e.prototype,t),r&&v(e,r),Object.defineProperty(e,"prototype",{writable:!1}),e}function y(e,t,r){return(t=h(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function h(e){var t=function(e,t){if("object"!==m(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!==m(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===m(t)?t:String(t)}var b=g((function e(){var t=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),y(this,"sortAndSave",(function(){var e=f(t.todos);e.sort((function(e,t){return e.index>t.index?1:e.index<t.index?-1:0}));var r=0;e.forEach((function(e){r+=1,e.index=r})),t.todos=f(e),localStorage.setItem("todos",JSON.stringify(t.todos))})),y(this,"render",(function(){c.innerHTML="",a.innerText="",a.classList.remove("form-error"),t.sortAndSave(),t.todos.length>0?t.todos.forEach((function(e){var r=document.createElement("li");r.id=e.index,r.className="todo-item",r.setAttribute("draggable",!0),r.addEventListener("dragstart",(function(){r.classList.add("dragging")})),r.addEventListener("dragend",(function(){r.classList.remove("dragging")}));var n=document.createElement("input");n.setAttribute("type","checkbox"),n.id="todo-compleate",n.addEventListener("change",(function(e){t.onCompleate(e)}));var o=document.createElement("p");o.className="todo-des",o.innerText=e.description,e.completed&&(n.setAttribute("checked","yes"),o.classList.add("todo-compleated"));var i=document.createElement("button");i.className="btn-three-dot",i.innerHTML='<img src="'.concat(d,'" alt="...">'),i.addEventListener("click",(function(e){t.onClickTodoDes(e)})),r.append(n,o,i),c.appendChild(r)})):c.innerHTML='<p class="no-item">There is no todo to show! Please add a new one.</p>'})),y(this,"onSubmit",(function(){var e=i.value,r=o(e,!0,3,255,!1);if(!0===r.isError&&r.msg.length>=0)a.classList.add("form-error"),a.textContent=r.msg,i.classList.add("invalid");else{a.classList.remove("form-error"),a.textContent="",i.classList.remove("invalid"),i.value="";var n={description:e,completed:!1,index:t.todos.length+1||1};t.todos=[].concat(f(t.todos),[n]),t.render()}})),y(this,"delete",(function(e){t.todos=t.todos.filter((function(t){return t.index.toString()!==e})),t.render()})),y(this,"edit",(function(e){var r=e.target.value,n=o(r,!0,3,255,!1);if(!0===n.isError&&n.msg.length>0)a.classList.add("form-error"),a.textContent=n.msg,e.target.classList.add("invalid-edit");else{e.target.classList.remove("invalid-edit");var i=e.target.parentElement.id,s=f(t.todos),c=s.findIndex((function(e){return i===e.index.toString()}));c>=0&&(s[c].description=r),t.todos=f(s),t.render()}})),y(this,"onClickTodoDes",(function(e){var r=e.target.parentElement.parentElement,n=r.querySelector(".todo-des").innerText;r.innerHTML="";var o=document.createElement("input");o.setAttribute("type","checkbox"),o.id="todo-compleate",o.addEventListener("change",(function(e){t.onCompleate(e)}));var i=document.createElement("input");i.setAttribute("type","text"),i.setAttribute("value",n),i.className="todo-edit-input",i.addEventListener("keypress",(function(e){"Enter"===e.key?(e.preventDefault(),t.edit(e)):(a.classList.remove("form-error"),a.innerText="",e.target.classList.remove("invalid-edit"))}));var s=document.createElement("button");s.className="btn-delete",s.innerHTML='<img src="'.concat(u,'" alt="X">'),s.addEventListener("click",(function(){var e=r.id;t.delete(e)})),r.append(o,i,s)})),y(this,"onCompleate",(function(e){var r=e.target.parentElement.id,n=f(t.todos),o=n.findIndex((function(e){return r===e.index.toString()}));o>=0&&(n[o].completed=!n[o].completed),t.todos=f(n),t.render()})),y(this,"onFilterCompletedTodos",(function(){var e=f(t.todos);e=e.filter((function(e){return!0!==e.completed})),t.todos=f(e),t.render()})),localStorage.getItem("todos")?this.todos=JSON.parse(localStorage.getItem("todos")):this.todos=[]}));const E=r.p+"images/enter-24.png";var S=new b;i.addEventListener("keypress",(function(e){"Enter"===e.key?(e.preventDefault(),S.onSubmit()):(a.innerHTML="",a.classList.remove("form-error"),i.classList.remove("invalid"))})),s.addEventListener("click",(function(e){e.preventDefault(),S.onSubmit()})),l.addEventListener("click",(function(){S.onFilterCompletedTodos()})),c.addEventListener("dragover",(function(e){e.preventDefault();var t=function(e,t){return(r=e.querySelectorAll(".todo-item:not(.dragging)"),function(e){if(Array.isArray(e))return n(e)}(r)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(r)||function(e,t){if(e){if("string"==typeof e)return n(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?n(e,t):void 0}}(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()).reduce((function(e,r){var n=r.getBoundingClientRect(),o=t-n.top-n.height/2;return o<0&&o>e.offset?{offset:o,element:r}:e}),{offset:Number.NEGATIVE_INFINITY}).element;var r}(c,e.clientY),r=c.querySelector(".dragging");null==r?c.appendChild(r):c.insertBefore(r,t)})),window.onload=function(){S.render(),document.querySelector(".btn-submit").innerHTML="<img src='".concat(E,"' alt='submit'/>")}}},e=>{e(e.s=852)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,